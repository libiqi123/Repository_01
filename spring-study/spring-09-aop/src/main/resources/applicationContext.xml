<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 方式一：使用原生Spring API接口 -->

    <!--   注册bean   -->
    <bean id="UserService" class="com.xiyou3g.service.UserServiceImpl"/>
    <bean id="log" class="com.xiyou3g.log.Log"/>
    <bean id="afterLog" class="com.xiyou3g.log.AfterLog"/>

    <!-- 配置aop  需要导入aop的约束
     http://www.springframework.org/schema/aop
     https://www.springframework.org/schema/aop/spring-aop.xsd
    -->


    <!--<aop:config>-->
       <!-- 切入点  -->
       <!-- <aop:pointcut id="pointcut" expression="execution(* com.xiyou3g.service.UserServiceImpl.*(..))"/> -->
       <!-- 执行环绕增强 -->
    <!--
        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
      </aop:config>
    -->
   <!-- 方式二：使用自定义类实现-->

  <!--  <bean id="diy" class="com.xiyou3g.diy.DiyPointCut"/>
    <aop:config>
        &lt;!&ndash;自定义切面,ref 要引用的类&ndash;&gt;
        <aop:aspect ref="diy">
            &lt;!&ndash;切入点&ndash;&gt;
            <aop:pointcut id="point" expression="execution(* com.xiyou3g.service.UserServiceImpl.*(..))"/>
            &lt;!&ndash;通知&ndash;&gt;
            <aop:before method="before" pointcut-ref="point"/>
            <aop:after method="after" pointcut-ref="point"/>
        </aop:aspect>
    </aop:config>-->


    <!--  方式三  -->

    <bean id="annotationPointCut" class="com.xiyou3g.diy.AnnotationPointCut"/>

    <!--开启注解支持-->

   <aop:aspectj-autoproxy/>

</beans>